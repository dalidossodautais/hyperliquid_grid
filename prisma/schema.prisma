generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                  String               @id @default(cuid())
  name                String?
  email               String               @unique
  emailVerified       DateTime?
  password            String
  image               String?
  Account             Account[]
  exchangeConnections ExchangeConnection[]
  Session             Session[]
}

model ExchangeConnection {
  id              String   @id @default(cuid())
  name            String
  exchange        String
  key             String
  secret          String?
  apiWalletAddress String?
  apiPrivateKey   String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  userId          String
  User            User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, exchange, key])
  @@index([userId])
}

model Account {
  id                String  @id
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  User              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id
  sessionToken String   @unique
  userId       String
  expires      DateTime
  User         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
